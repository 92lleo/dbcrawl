//just to save some stuff

ite = table.select("tr").iterator();
			Element delay = table.getElementsByClass("okmsg").first();

			ite.next();
			ite.next(); // first one is image, skip it

			System.out.println("Value 1: " + ite.next().text());
			System.out.println("Value 2: " + ite.next().text());
			System.out.println("Value 3: " + ite.next().text());
			System.out.println("Value 4: " + ite.next().text());
			// System.out.println("Value 5: " + ite.next().text());
			List<TextNode> l = ite.next().textNodes();
			// System.out.println(delay.text());
			for (TextNode t : l) {
				System.out.println("abc: " + t.text());
			}
			
			
public void test() {
		String url = "http://mobile.bahn.de/bin/mobil/query.exe/dox?country=DEU&rt=1&use_realtime_filter=1&webview=&searchMode=NORMAL";

		String date, time, start, dest;
		Date today = new Date();

		DateFormat formatter = DateFormat.getDateInstance(DateFormat.SHORT,
				Locale.GERMANY);
		date = formatter.format(today);
		SimpleDateFormat ft = new SimpleDateFormat("HH:mm", Locale.GERMANY);
		time = ft.format(today);
		start = "Stuttgart";
		dest = "Ulm";

		System.out.println(date + "-" + time + ", " + start + " to " + dest);

		try {
			Document doc = Jsoup
					.connect(url)
					.data("queryPageDisplayed", "yes")
					.data("REQ0JourneyStopsS0A", "1")
					.data("REQ0JourneyStopsS0G", start)
					// start
					.data("REQ0JourneyStopsS0ID", "")
					.data("locationErrorShownfrom", "yes")
					.data("REQ0JourneyStopsZ0A", "1")
					.data("REQ0JourneyStopsZ0G", dest)
					// dest
					.data("REQ0JourneyStopsZ0ID", "")
					.data("locationErrorShownto", "yes")
					.data("REQ0JourneyDate", date)
					// date
					.data("REQ0JourneyTime", time)
					.data("REQ0HafasSearchForw", "1")
					.data("REQ0Tariff_TravellerType.1", "E")
					.data("REQ0Tariff_TravellerReductionClass.1", "0")
					.data("REQ0Tariff_Class", "2")
					.data("REQ0JourneyStops1.0A", "1")
					.data("REQ0JourneyStops1.0G", "")
					.data("REQ0JourneyStops2.0A", "1")
					.data("REQ0JourneyStops2.0G", "")
					.data("REQ0HafasChangeTime:0", "1")
					.data("existOptimizePrice", "1")
					.data("REQ0HafasOptimize1:0", "1")
					.data("existOptionBits", "yes")
					.data("immediateAvail", "ON").data("start", "Suchen")
					.userAgent("Mozilla").post();
			String s = doc.title();
			System.out.println("Title: " + s);
			doc.getElementsByClass("ovTable clicktable");
			Element table = doc.select("table[class=ovTable clicktable]")
					.first();

			Elements abfahrten = table.children();
			// remove unnecessary stuff
			abfahrten = abfahrten.get(1).children();
			abfahrten.remove(5);

			for (Element departure : abfahrten) {
				// split to sinlge departures
				Elements single = departure.children();
				Iterator<Element> elements = single.iterator();
				Departure dep = new Departure();
				String[] current = elements.next().text().split(" ");
				dep.setTimes(current[0], current[1]);
				dep.setLocations(start, dest);
				current = elements.next().text().split(" ");
				if (current.length > 2) {
					current[0] = current[0] + " " + current[1];
					current[1] = current[2] + " " + current[3];
				}
				if (current[0].trim().length() < 2) {
					current[0] = "+0";
				}
				dep.setDelay(current[0]);
				current = elements.next().text().split(" ");
				dep.setDuration(current[1]);
				// current = elements.next().text().split(" ");
				dep.setType((elements.next().text().split(" "))[0]);
				System.out.println(dep.toString());
			}
		} catch (IOException e) {
			e.printStackTrace();
		} catch (NoSuchElementException e) {
			System.err.println("Not enough entries");
		}
	}